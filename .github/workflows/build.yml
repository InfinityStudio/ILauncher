name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci
    - name: Get Build Number
      uses: ./.github/actions/get-build-number
      id: vars
    - name: Build
      run: |
        npm run build:production
      env:
        BUILD_NUMBER: ${{ steps.vars.outputs.build_number }}
        FULL_RELEASE: ${{ startsWith(github.event.commits[0].message, 'chore(release)') }}
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/*.*
    - name: Upload Windows Asar
      if: ${{ runner.os == 'Windows' && startsWith(github.event.commits[0].message, 'chore(release)') }} 
      uses: actions/upload-artifact@v2
      with:
        name: app.asar
        path: build/win-unpacked/resources/app.asar

  release:
    if: startsWith(github.event.commits[0].message, 'chore(release)')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci
    - name: Download Asar
      uses: actions/download-artifact@v2
      with:
        name: app.asar
        path: build/app.asar
    - name: Download Build
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - name: Prepare Release
      id: prepare_release
      uses: ./.github/actions/prepare-release
    - name: Draft Release
      id: create_release
      uses: voxelum/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.prepare_release.outputs.tag }}
        release_name: ${{ steps.prepare_release.outputs.release }}
        draft: false
        prerelease: ${{ steps.prepare_release.outputs.prerelease }}
        body: ${{ steps.prepare_release.outputs.body }}
        asset_dir_path: ./build
    - name: Upload to Azure
      uses: ci010/upload-blob-to-azure@master
      env:
        AZURE_ACCOUNT_KEY: ${{ secrets.AZURE_ACCOUNT_KEY }}
      with:
        account: xmcl
        container: releases
        directory: ./build
